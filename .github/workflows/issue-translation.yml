name: Issue Translation via GitHub Models

on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: write
  models: read

jobs:
  translate:
    runs-on: ubuntu-latest
    steps:
      - name: Run AI Inference
        id: inference
        uses: actions/ai-inference@v2
        with:
          model: openai/gpt-5-nano
          system-prompt: >-
            You are a professional technical translator. If target language is empty, default to English. Preserve Markdown structure and code blocks. Output only compact JSON: {"title": string, "body": string}. No extra text.
          prompt: |-
            Translate the following GitHub Issue into "${{ vars.TARGET_LANG }}" and return ONLY JSON with keys title and body. Keep code blocks unchanged.

            Title:
            ${{ github.event.issue.title }}

            Body:
            ${{ github.event.issue.body }}
          max-tokens: 800

      - name: Post translation comment
        uses: actions/github-script@v7
        env:
          RESPONSE: ${{ steps.inference.outputs.response }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        with:
          script: |
            const response = process.env.RESPONSE || '';
            let text = response.trim();
            text = text.replace(/^```(?:json)?\s*/i, '').replace(/```$/, '');
            let data;
            try {
              data = JSON.parse(text);
            } catch {
              data = { title: '', body: text };
            }
            const body = `### 翻訳\n\n#### Title\n${data.title || ''}\n\n#### Body\n${data.body || ''}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number(process.env.ISSUE_NUMBER),
              body
            });


